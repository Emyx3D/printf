#include <limits.h>
#include <stdio.h>
#include "main.h"

/**
 * main - Entry point
 *
 * Return: Always 0
 */

int main(void)
{
	int len;
	int len2;


	len = _printf("Let's try to printf a sentence.\n");
	len2 = printf("Let's try to printf a sentence.\n");
     
	_printf("Length:[%d, %i]\n", len, len);
	printf("Length:[%d, %i]\n", len2, len2);
	_printf("Negative:[%d]\n", -9999);
	printf("Negative:[%d]\n", -9999);
	_printf("Character:[%c]\n", 'H');
	printf("Character:[%c]\n", 'H');
	_printf("String:[%s]\n", "I am a string !");
	printf("String:[%s]\n", "I am a string !");
	len = _printf("Percent:[%%]\n");
	len2 = printf("Percent:[%%]\n");
	_printf("Len:[%d]\n", len);
	printf("Len:[%d]\n", len2);
	return (0);
}

alex@ubuntu:~/c/printf$ gcc -Wall -Wextra -Werror -pedantic -Wno-format *.c
alex@ubuntu:~/c/printf$ ./printf
Let's try to printf a simple sentence.
Let's try to printf a simple sentence.
Length:[39, 39]
Length:[39, 39]
Negative:[-9999]
Negative:[-9999]
Character:[H]
Character:[H]
String:[I am a string !]
String:[I am a string !]
Percent:[%]
Percent:[%]
Len:[12]
Len:[12]

.SH DESCRIPTION
The _printf() function produces output according to a format which is further described
below. This function write its output to the stdout, the standard output stream.

.SH USAGE
The following key characters preceeded by % symbol called specifiers are needed to use _printf.
.RS 3
%c: Used to print characters
.RS 0
%s: Used to print strings
.RS 0
%d: Prints integers of max and min size of an int type
.RS 0
%i: Prints integers of max and min size of an int type
.RS 0
%%: Prints the symbol '%'
.SH RETURN VALUES
The _printf() function returns an integer representing the number of symbols
printed not counting \\0 (NULL) for the string.
.SH SEE ALSO
.I printf(3)
.SH BUGS
No known bugs.
.SH AUTHOR
Eseigbe Emmanuel & Oshioregbeme Collins Inaboya
